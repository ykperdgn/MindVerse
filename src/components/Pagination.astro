---
// Astro Pagination Component
interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
  category?: string;
}

const { currentPage, totalPages, baseUrl, category } = Astro.props;

function getPageUrl(page: number) {
  if (page === 1) {
    return category ? `/${category}` : baseUrl;
  }
  return category ? `/${category}/page/${page}` : `${baseUrl}/page/${page}`;
}

function renderPageNumbers() {
  const pages = [];
  const maxVisiblePages = 5;

  let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
  let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

  // Adjust start page if we're near the end
  if (endPage - startPage < maxVisiblePages - 1) {
    startPage = Math.max(1, endPage - maxVisiblePages + 1);
  }

  // Previous page
  if (currentPage > 1) {
    pages.push({
      type: 'link',
      url: getPageUrl(currentPage - 1),
      text: '‹ Önceki',
      class: 'px-3 py-2 mx-1 text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50'
    });
  }

  // First page
  if (startPage > 1) {
    pages.push({
      type: 'link',
      url: getPageUrl(1),
      text: '1',
      class: 'px-3 py-2 mx-1 text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50'
    });
    if (startPage > 2) {
      pages.push({
        type: 'span',
        text: '...',
        class: 'px-3 py-2 mx-1 text-gray-500'
      });
    }
  }

  // Page numbers
  for (let i = startPage; i <= endPage; i++) {
    pages.push({
      type: 'link',
      url: getPageUrl(i),
      text: i.toString(),
      class: i === currentPage
        ? 'px-3 py-2 mx-1 text-white bg-blue-600 border border-blue-600 rounded-md'
        : 'px-3 py-2 mx-1 text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50'
    });
  }

  // Last page
  if (endPage < totalPages) {
    if (endPage < totalPages - 1) {
      pages.push({
        type: 'span',
        text: '...',
        class: 'px-3 py-2 mx-1 text-gray-500'
      });
    }
    pages.push({
      type: 'link',
      url: getPageUrl(totalPages),
      text: totalPages.toString(),
      class: 'px-3 py-2 mx-1 text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50'
    });
  }

  // Next page
  if (currentPage < totalPages) {
    pages.push({
      type: 'link',
      url: getPageUrl(currentPage + 1),
      text: 'Sonraki ›',
      class: 'px-3 py-2 mx-1 text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50'
    });
  }

  return pages;
}

const pageNumbers = renderPageNumbers();
---

{totalPages > 1 && (
  <div class="pagination flex justify-center items-center mt-12 mb-8">
    <nav class="flex items-center space-x-1">
      {pageNumbers.map((page) => (
        page.type === 'link' ? (
          <a href={page.url} class={page.class}>
            {page.text}
          </a>
        ) : (
          <span class={page.class}>{page.text}</span>
        )
      ))}
    </nav>

    <!-- Page info -->
    <div class="ml-8 text-sm text-gray-600">
      Sayfa {currentPage} / {totalPages}
    </div>
  </div>
)}

<style>
  .pagination a:hover {
    text-decoration: none;
  }
</style>
